[{"C:\\Users\\qwerty\\webdev\\Week 4\\Day 18\\nextagramv2\\src\\index.js":"1","C:\\Users\\qwerty\\webdev\\Week 4\\Day 18\\nextagramv2\\src\\reportWebVitals.js":"2","C:\\Users\\qwerty\\webdev\\Week 4\\Day 18\\nextagramv2\\src\\App.js":"3","C:\\Users\\qwerty\\webdev\\Week 4\\Day 18\\nextagramv2\\src\\pages\\HomePage.js":"4","C:\\Users\\qwerty\\webdev\\Week 4\\Day 18\\nextagramv2\\src\\components\\LoadingIndicator.js":"5","C:\\Users\\qwerty\\webdev\\Week 4\\Day 18\\nextagramv2\\src\\utilities\\UserImages.js":"6","C:\\Users\\qwerty\\webdev\\Week 4\\Day 18\\nextagramv2\\src\\pages\\UserProfilePage.js":"7","C:\\Users\\qwerty\\webdev\\Week 4\\Day 18\\nextagramv2\\src\\pages\\UserPage.js":"8","C:\\Users\\qwerty\\webdev\\Week 4\\Day 18\\nextagramv2\\src\\components\\NavBarDisplay.js":"9","C:\\Users\\qwerty\\webdev\\Week 4\\Day 18\\nextagramv2\\src\\components\\AuthModal.js":"10","C:\\Users\\qwerty\\webdev\\Week 4\\Day 18\\nextagramv2\\src\\components\\LoginForm.js":"11","C:\\Users\\qwerty\\webdev\\Week 4\\Day 18\\nextagramv2\\src\\components\\SignUpForm.js":"12","C:\\Users\\qwerty\\webdev\\Week 4\\Day 18\\nextagramv2\\src\\pages\\MyProfilePage.js":"13","C:\\Users\\qwerty\\webdev\\Week 4\\Day 18\\nextagramv2\\src\\pages\\ImageUploadPage.js":"14"},{"size":720,"mtime":1607498183149,"results":"15","hashOfConfig":"16"},{"size":362,"mtime":499162500000,"results":"17","hashOfConfig":"16"},{"size":1920,"mtime":1607583578845,"results":"18","hashOfConfig":"16"},{"size":1414,"mtime":1607586570671,"results":"19","hashOfConfig":"16"},{"size":1294,"mtime":1607496832618,"results":"20","hashOfConfig":"16"},{"size":1405,"mtime":1607501169278,"results":"21","hashOfConfig":"16"},{"size":2325,"mtime":1607504778379,"results":"22","hashOfConfig":"16"},{"size":2432,"mtime":1607587670416,"results":"23","hashOfConfig":"16"},{"size":3016,"mtime":1607586378575,"results":"24","hashOfConfig":"16"},{"size":710,"mtime":1607531035753,"results":"25","hashOfConfig":"16"},{"size":2516,"mtime":1607566104414,"results":"26","hashOfConfig":"16"},{"size":7803,"mtime":1607527535211,"results":"27","hashOfConfig":"16"},{"size":3801,"mtime":1607588271328,"results":"28","hashOfConfig":"16"},{"size":4967,"mtime":1607656878754,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"1msocum",{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"32"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"32"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"32"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"32"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"32"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\qwerty\\webdev\\Week 4\\Day 18\\nextagramv2\\src\\index.js",[],["64","65"],"C:\\Users\\qwerty\\webdev\\Week 4\\Day 18\\nextagramv2\\src\\reportWebVitals.js",[],"C:\\Users\\qwerty\\webdev\\Week 4\\Day 18\\nextagramv2\\src\\App.js",[],"C:\\Users\\qwerty\\webdev\\Week 4\\Day 18\\nextagramv2\\src\\pages\\HomePage.js",[],"C:\\Users\\qwerty\\webdev\\Week 4\\Day 18\\nextagramv2\\src\\components\\LoadingIndicator.js",[],"C:\\Users\\qwerty\\webdev\\Week 4\\Day 18\\nextagramv2\\src\\utilities\\UserImages.js",[],"C:\\Users\\qwerty\\webdev\\Week 4\\Day 18\\nextagramv2\\src\\pages\\UserProfilePage.js",["66","67"],"import React, {useState, useEffect} from 'react'\r\nimport axios from 'axios'\r\nimport LoadingIndicator from '../components/LoadingIndicator'\r\nimport { Card, CardText, CardImg } from 'reactstrap'\r\n\r\nfunction UserProfilePage({match}) {\r\n    const [user, updateUser] = useState()\r\n    const [userImages, updateImages] = useState([])\r\n    const [isloading, setIsLoading] = useState(true);\r\n\r\n    useEffect(() => {\r\n        axios.get(\"https://insta.nextacademy.com/api/v1/users\")\r\n        .then((response) => {\r\n            for (const object of response.data) {\r\n                if (object.id == match.params.id) {\r\n                    updateUser(object)\r\n                    setIsLoading(false)\r\n                    return object\r\n                }\r\n            }\r\n        })\r\n        .then((object) => {\r\n            axios.get(`https://insta.nextacademy.com/api/v2/images?userId=${object.id}`)\r\n            .then((response) => {\r\n                updateImages(response.data)\r\n            })\r\n        })\r\n    }, [])\r\n\r\n\r\n    if (user !== undefined && userImages !== []) {\r\n        if(isloading){\r\n            return <LoadingIndicator width=\"100px\" height=\"100px\" color=\"blue\" /> \r\n        }\r\n        return (\r\n            <div style={{marginTop: \"50px\"}}>  \r\n                <Card className =\"col-12 d-flex align-items-center\" style={{backgroundColor: \"lightgray\", paddingTop: \"50px\"}}>\r\n                    <CardImg className=\"rounded-circle\" src={user.profileImage} style={{border: \"1px solid darkgray\", width: \"500px\"}}/>\r\n                    <CardText id=\"profileName\" style={{margin: \"auto\", fontSize: \"50px\", textAlign: \"left\"}}>{user.username}</CardText>\r\n                </Card>\r\n                \r\n                <div style={{display: \"flex\", flexWrap: \"wrap\", justifyContent: \"space-around\", backgroundColor: \"gray\"}}>\r\n                    {userImages.map((images) => {\r\n                        return (\r\n                            <Card className = \"col-3 justify-content-center\" style={{margin: \"20px\"}}>\r\n                                <CardImg src={images.url} style={{width: \"100%\"}}/>\r\n                            </Card>\r\n                        )\r\n                    })}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n    else {\r\n        return null\r\n    }\r\n\r\n}\r\n\r\nexport default UserProfilePage","C:\\Users\\qwerty\\webdev\\Week 4\\Day 18\\nextagramv2\\src\\pages\\UserPage.js",["68"],"import React, {useState, useEffect} from 'react'\r\nimport {\r\n    Card, \r\n    CardImg, \r\n    CardBody,\r\n    CardTitle,\r\n} from 'reactstrap';\r\nimport axios from 'axios'\r\nimport {Link} from 'react-router-dom'\r\n\r\nfunction UserPage() {\r\n    const [users, updateUsers] = useState([])\r\n    const [search, updateSearch] = useState(\"\")\r\n    \r\n    useEffect(() => {\r\n        axios.get(\"https://insta.nextacademy.com/api/v1/users\")\r\n        .then((response) => {\r\n            console.log(response.data)\r\n            updateUsers(response.data)\r\n        })\r\n    }, [])\r\n\r\n\r\n    const handleInput = e => {\r\n        if(e.target.name === \"username\"){\r\n            updateSearch(e.target.value);\r\n        }   \r\n    }\r\n\r\n    let returnProfiles = (user) => {\r\n        console.log(user)\r\n        return (\r\n            <div className=\"col-3\" style={{display:\"flex\", flexWrap: \"wrap\", justifyContent: \"center\", alignItems: \"center\"}}>\r\n                <Card style={{backgroundColor: \"lightgray\", width: \"300px\", height: \"400px\"}}>\r\n                    <Link to={`/user/${user.id}`} className=\"links\">   \r\n                        <CardImg className=\"rounded-circle\" width=\"100%\" height=\"300px\" src={user.profileImage} style={{border: \"1px darkgray solid\", marginTop: '10px'}} />\r\n                        <CardBody>\r\n                            <CardTitle style={{fontSize: \"24px\", textAlign: \"center\"}}>{user.username}</CardTitle>\r\n                        </CardBody>\r\n                    </Link>\r\n                </Card>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div style={{display: \"flex\", position: \"fixed\", top: \"15px\", left: \"80vw\", zIndex: \"1\"}}>\r\n                <input type=\"text\" name=\"username\" value={search} onChange={handleInput} style={{height: '30px', fontSize: '15px'}} placeholder=\"Search filter...\"/>\r\n            </div>\r\n\r\n            <div style={{display: \"flex\", flexWrap: \"wrap\", justifyContent: \"space-around\", backgroundColor: \"gray\", marginTop: \"50px\"}}>\r\n                {users.map((user) => {\r\n                    if (search === \"\") {\r\n                        return returnProfiles(user)\r\n                    }\r\n                    else if (search.length >= 1 && user.username.toLowerCase().includes(search.toLowerCase())) {\r\n                        return returnProfiles(user)\r\n                    }\r\n                })}\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default UserPage","C:\\Users\\qwerty\\webdev\\Week 4\\Day 18\\nextagramv2\\src\\components\\NavBarDisplay.js",[],"C:\\Users\\qwerty\\webdev\\Week 4\\Day 18\\nextagramv2\\src\\components\\AuthModal.js",[],"C:\\Users\\qwerty\\webdev\\Week 4\\Day 18\\nextagramv2\\src\\components\\LoginForm.js",["69"],"import React, {useState} from \"react\"\r\nimport {ModalHeader, ModalBody, ModalFooter, Button, Form, FormGroup, Label, Input} from \"reactstrap\"\r\nimport {toast} from \"react-toastify\"\r\nimport axios from \"axios\"\r\n\r\nconst LoginForm = ({toggleIsLogin, toggle, setLoggedIn, updateLoginUsername}) => {\r\n    const [username, setUsername] = useState(\"\")\r\n    const [password, setPassword] = useState(\"\")\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault()\r\n\r\n        axios({\r\n            method: 'post',\r\n            url: 'https://insta.nextacademy.com/api/v1/login',\r\n            data: {\r\n            username: username,\r\n            password: password\r\n            }\r\n        })\r\n        .then(result => {\r\n            console.log(result)\r\n            localStorage.clear()\r\n            localStorage.setItem('jwt', result.data.auth_token)\r\n            localStorage.setItem('username', result.data.user.username)\r\n            setLoggedIn(true)\r\n            updateLoginUsername(result.data.user.username)\r\n            toggle()\r\n\r\n            toast.success(`Welcome back, ${username}!`, {\r\n                position: \"top-right\",\r\n                autoClose: 5000,\r\n                hideProgressBar: false,\r\n                closeOnClick: true,\r\n                pauseOnHover: true,\r\n                draggable: true,\r\n            });\r\n        })\r\n        .catch(err=>{\r\n            console.log(err)\r\n        })\r\n    }\r\n\r\n    return (\r\n    <>\r\n        <Form>\r\n        <ModalHeader toggle={toggle}>Log In</ModalHeader>\r\n        <ModalBody>\r\n            <FormGroup>\r\n                <Label for=\"username\">Username</Label>\r\n                <Input type=\"username\" name=\"username\" id=\"username\" placeholder=\"username\" value={username}  onChange={(e) => {setUsername(e.target.value)}}/>\r\n            </FormGroup>\r\n            <FormGroup>\r\n                <Label for=\"password\">Password</Label>\r\n                <Input type=\"password\" name=\"password\" id=\"password\" placeholder=\"password\" value={password} onChange={(e) => {setPassword(e.target.value)}}/>\r\n            </FormGroup>\r\n            <p>New member? <a href=\"#\" onClick ={(e) =>{\r\n                e.preventDefault()\r\n                toggleIsLogin()\r\n            }}>Sign up here</a></p>\r\n        </ModalBody>\r\n        <ModalFooter>\r\n            <Button color=\"primary\" onClick={handleSubmit}>Log In</Button>{' '}\r\n            <Button color=\"secondary\" onClick={toggle}>Cancel</Button>\r\n        </ModalFooter>\r\n        </Form>\r\n    </>\r\n    )\r\n}\r\n\r\nexport default LoginForm","C:\\Users\\qwerty\\webdev\\Week 4\\Day 18\\nextagramv2\\src\\components\\SignUpForm.js",["70","71","72","73"],"import React, {useState} from \"react\"\r\nimport {ModalHeader, ModalBody, ModalFooter, Button, Form, FormGroup, Label, Input, FormFeedback, FormText} from \"reactstrap\"\r\nimport axios from \"axios\"\r\nimport {toast} from \"react-toastify\"\r\n\r\nconst SignUpForm = ({toggleIsLogin, toggle}) => {\r\n    const [username, setUsername] = useState(\"\")\r\n    const [email, setEmail] = useState(\"\")\r\n    const [password, setPassword] = useState(\"\")\r\n    const [confirmPassword, setConfirmPassword] = useState(\"\")\r\n    const [delay, setDelay] = useState(null)\r\n    const [usernameValid, setUsernameValid] = useState(false)\r\n\r\n    // USERNAME\r\n    const handleUsername = (e) => {      \r\n        clearTimeout(delay)\r\n        const newUsername = e.target.value\r\n        setUsername(newUsername)\r\n        \r\n        const newDelay = setTimeout(() => {\r\n            checkUsername(newUsername) //send axios request after 500ms delay\r\n        }, 500);\r\n        setDelay(newDelay)\r\n    }\r\n\r\n    const checkUsername = newUsername => {\r\n        axios\r\n        .get(`https://insta.nextacademy.com/api/v1/users/check_name?username=${newUsername}`)\r\n        .then(res=>{\r\n            res.data.valid\r\n            ? setUsernameValid(true)\r\n            : setUsernameValid(false)\r\n        })\r\n    }\r\n    \r\n    const getInputProp = () => {\r\n        if (!username.length) {\r\n            return null;\r\n        }\r\n        if (username.length <= 6 || username.length >=20) {\r\n             return { invalid: true };\r\n        }\r\n        if (usernameValid) {\r\n            return { valid: true };\r\n        } else {\r\n            return { invalid: true };\r\n        }\r\n    };\r\n    \r\n    const getFormFeedback = () => {\r\n        if(!username.length) {\r\n            return null\r\n        }\r\n        if(username.length <=6 || username.length >=20){\r\n            return <FormFeedback invalid>Must be between 6 and 20 characters</FormFeedback>\r\n        }\r\n        if (usernameValid){\r\n            return <FormFeedback valid>Sweet! That name is available</FormFeedback>\r\n        } else {\r\n            return <FormFeedback invalid>Sorry! That username is taken.</FormFeedback> \r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n    \r\n    // EMAIL\r\n    const mailformat = /^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/;\r\n\r\n    const handleEmailInput = e => {\r\n        setEmail(e.target.value)\r\n    }\r\n\r\n    const getEmailProp = () => {\r\n        if (!email.length){\r\n            return null\r\n        } \r\n          // email check\r\n        if(!email.match(mailformat)){\r\n            return {invalid:true}\r\n        } else {\r\n            return {valid:true}\r\n        }\r\n    }\r\n\r\n    const getFormEmailFeedback = () => {\r\n        if(!email.length){\r\n            return null\r\n        }\r\n        if(!email.match(mailformat)){\r\n            return <FormFeedback invalid>Email format is not valid. Please check.</FormFeedback>\r\n        } else {\r\n            return <FormFeedback valid>Email format looks legit! </FormFeedback>\r\n        }\r\n    }\r\n\r\n    // PASSWORD\r\n    const handlePasswordInput = e => {\r\n        setPassword(e.target.value)\r\n    }\r\n\r\n    const getPasswordProp = () => {\r\n        if (!password.length){\r\n            return null\r\n        }\r\n        if (password.length < 9 || password.length > 50){\r\n            return {invalid:true}\r\n        } else {\r\n            return {valid:true}\r\n        }\r\n    }\r\n\r\n    const getFormPasswordFeedback = () => {\r\n        if (!password.length) {\r\n            return null\r\n        }\r\n        if (password.length < 9 || password.length > 50) {\r\n            return <FormFeedback invalid>Password must be between 8 and 50 characters in length!</FormFeedback>\r\n        }\r\n    }\r\n\r\n    // CONFIRM PASSWORD\r\n    const handleConfirmPasswordInput = e => {\r\n        setConfirmPassword(e.target.value)\r\n    }\r\n\r\n    const getFormPasswordConfirmProp = () => {\r\n        if (!confirmPassword.length){\r\n            return null\r\n        }\r\n        if (confirmPassword != password){\r\n            return {invalid:true}\r\n        } else {\r\n            return {valid:true}\r\n        }\r\n    }\r\n      \r\n    const getFormPasswordConfirmFeedback=()=>{\r\n        if(!confirmPassword.length){\r\n            return null\r\n        }\r\n        if(confirmPassword != password){\r\n            return <FormFeedback invalid> Passwords do not match. Please check again.</FormFeedback>\r\n        } else {\r\n            return <FormFeedback valid>Passwords match! You're good to go!</FormFeedback>\r\n        }\r\n    }\r\n\r\n\r\n    // SUBMIT\r\n    const handleSubmit = () => { \r\n        axios({\r\n            method: 'POST',\r\n            url: 'https://insta.nextacademy.com/api/v1/users/',\r\n            data: {\r\n                username: username,\r\n                email: email,\r\n                password: password\r\n            }\r\n        })\r\n        .then(response => {\r\n            toggle()\r\n            console.log(response)\r\n            toast.success(response.data.message, {\r\n                position: \"top-right\",\r\n                autoClose: 5000,\r\n                hideProgressBar: false,\r\n                closeOnClick: true,\r\n                pauseOnHover: true,\r\n                draggable: true,\r\n                progress: undefined,\r\n                });\r\n        })\r\n        .catch(error => {\r\n            error.response.data.message.forEach((message) => {\r\n                toast.error(message, {\r\n                position: \"top-right\",\r\n                autoClose: 5000,\r\n                hideProgressBar: false,\r\n                closeOnClick: true,\r\n                pauseOnHover: true,\r\n                draggable: true,\r\n                progress: undefined,\r\n            });\r\n        })\r\n        console.error(error.response) // so that we know what went wrong if the request failed\r\n        })\r\n    }\r\n\r\n\r\n    return <>\r\n        <Form>\r\n            <ModalHeader toggle={toggle}>Sign Up</ModalHeader>\r\n            <ModalBody>\r\n                <FormGroup>\r\n                    <Label for=\"username\">Username</Label>\r\n                    <Input type=\"username\" name=\"username\" id=\"username\" placeholder=\"Key in username\" value={username} onChange={handleUsername} {...getInputProp()}/>\r\n                    {getFormFeedback()}\r\n                </FormGroup>\r\n                <FormGroup>\r\n                    <Label for=\"email\">Email</Label>\r\n                    <Input type=\"email\" name=\"email\" id=\"email\" placeholder=\"Key in email\" value={email} onChange={handleEmailInput} {...getEmailProp()}/>\r\n                    {getFormEmailFeedback()}\r\n                </FormGroup>\r\n                <FormGroup>\r\n                    <Label for=\"password\">Password</Label>\r\n                    <Input type=\"password\" name=\"password\" id=\"password\" placeholder=\"Key in password\" value={password} onChange={handlePasswordInput} {...getPasswordProp()}/>\r\n                    {getFormPasswordFeedback()}\r\n                </FormGroup>\r\n                <FormGroup>\r\n                    <Label for=\"confirmPassword\">Confirm Password</Label>\r\n                    <Input type=\"password\" name=\"password\" id=\"confirmPassword\" placeholder=\"Key in password again\" value={confirmPassword} onChange={handleConfirmPasswordInput} {...getFormPasswordConfirmProp()} />\r\n                    {getFormPasswordConfirmFeedback()}\r\n                </FormGroup>\r\n                <p>Already a member? <a href=\"#\" onClick ={(e) =>{\r\n                    e.preventDefault()\r\n                    toggleIsLogin()\r\n                }}>Log in here</a></p>\r\n            </ModalBody>\r\n            <ModalFooter>\r\n                <Button color=\"primary\" disabled={!(username && email && password && confirmPassword)} onClick={handleSubmit}>Sign Up</Button>{' '}\r\n                <Button color=\"secondary\" onClick={toggle}>Cancel</Button>\r\n            </ModalFooter>\r\n        </Form>\r\n    </>\r\n}\r\n\r\nexport default SignUpForm","C:\\Users\\qwerty\\webdev\\Week 4\\Day 18\\nextagramv2\\src\\pages\\MyProfilePage.js",["74","75"],"import axios from \"axios\"\r\nimport { useState, useEffect } from \"react\"\r\nimport { Jumbotron, Card, CardImg, CardText } from 'reactstrap'\r\nimport LoadingIndicator from '../components/LoadingIndicator'\r\nimport {useHistory} from 'react-router-dom'\r\n\r\nconst MyProfilePage = ({loggedIn}) => {\r\n    \r\n    const history = useHistory()\r\n    const [user, updateUser] = useState()\r\n    const [profilePicture, updateProfilePicture] = useState(\"\")\r\n    const [userImages, updateImages] = useState([])\r\n    const [isloading, setIsLoading] = useState(true);\r\n\r\n    let jwt = localStorage.getItem(\"jwt\")\r\n\r\n    useEffect(() => {\r\n        axios({\r\n            method: 'get',\r\n            url: 'https://insta.nextacademy.com/api/v1/users/me',\r\n            headers: {\r\n                'Authorization' : `Bearer ${jwt}`\r\n            }\r\n        })\r\n        .then(response => {\r\n            console.log(\"API request successful! \")\r\n            console.log(response)\r\n            updateUser(response.data.username)\r\n            updateProfilePicture(response.data.profile_picture)\r\n            setIsLoading(false)\r\n        })\r\n        .catch(err => {\r\n            console.log(\"API request failed.\")\r\n            console.log(err)\r\n        })\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        axios({\r\n            method: 'get',\r\n            url: 'https://insta.nextacademy.com/api/v1/images/me',\r\n            headers: {\r\n                'Authorization' : `Bearer ${jwt}`\r\n            }\r\n        })\r\n        .then((response) => {\r\n            console.log(\"Pictures data\") \r\n            console.log(response)\r\n            updateImages(response.data)\r\n        })\r\n        .catch(err => {\r\n            console.log(\"API request failed.\")\r\n            console.log(err)\r\n        })\r\n        \r\n    }, [])\r\n\r\n    \r\n    const createPage = () => {\r\n        if (user !== undefined && userImages !== []) {\r\n            if(isloading){\r\n                return <LoadingIndicator width=\"100px\" height=\"100px\" color=\"blue\" /> \r\n            }\r\n            return (\r\n                <>\r\n                    <button style={{position: \"absolute\", top: \"20vh\", left: \"80vw\", fontSize: \"25px\", zIndex: \"1\"}} onClick={()=>{history.push(`/upload`)}}>Upload Image</button>\r\n                    <div style={{marginTop: \"50px\"}}>  \r\n                        <Card className =\"col-12 d-flex align-items-center\" style={{backgroundColor: \"lightgray\", paddingTop: \"50px\"}}>\r\n                            <CardImg className=\"rounded-circle\" src={profilePicture} style={{border: \"1px solid darkgray\", width: \"500px\"}}/>\r\n                            <CardText id=\"profileName\" style={{margin: \"auto\", fontSize: \"50px\", textAlign: \"left\"}}>{user}</CardText>\r\n                        </Card>\r\n                        \r\n                        <div style={{display: \"flex\", flexWrap: \"wrap\", justifyContent: \"space-around\", backgroundColor: \"gray\"}}>\r\n                            {userImages.map((images) => {\r\n                                return (\r\n                                    <Card className = \"col-3 justify-content-center\" style={{margin: \"20px\"}}>\r\n                                        <CardImg src={images} style={{width: \"100%\"}}/>\r\n                                    </Card>\r\n                                )\r\n                            })}\r\n                        </div>\r\n                    </div>\r\n                </>\r\n            )\r\n        }\r\n        else {\r\n            return null\r\n        }\r\n    }\r\n    \r\n    \r\n    if (!loggedIn) {\r\n        return (\r\n            <Jumbotron style={{position: \"fixed\", top: \"35vh\", left: \"25vw\"}}>\r\n                <h1>You are not logged in! Login to access your profile!</h1>\r\n            </Jumbotron>\r\n        )\r\n    }\r\n    else {\r\n        return createPage()\r\n    }\r\n}\r\n\r\n\r\nexport default MyProfilePage","C:\\Users\\qwerty\\webdev\\Week 4\\Day 18\\nextagramv2\\src\\pages\\ImageUploadPage.js",["76","77"],{"ruleId":"78","replacedBy":"79"},{"ruleId":"80","replacedBy":"81"},{"ruleId":"82","severity":1,"message":"83","line":15,"column":31,"nodeType":"84","messageId":"85","endLine":15,"endColumn":33},{"ruleId":"86","severity":1,"message":"87","line":28,"column":8,"nodeType":"88","endLine":28,"endColumn":10,"suggestions":"89"},{"ruleId":"90","severity":1,"message":"91","line":53,"column":35,"nodeType":"92","messageId":"93","endLine":53,"endColumn":37},{"ruleId":"94","severity":1,"message":"95","line":57,"column":28,"nodeType":"96","endLine":60,"endColumn":16},{"ruleId":"97","severity":1,"message":"98","line":2,"column":99,"nodeType":"99","messageId":"100","endLine":2,"endColumn":107},{"ruleId":"82","severity":1,"message":"101","line":132,"column":29,"nodeType":"84","messageId":"85","endLine":132,"endColumn":31},{"ruleId":"82","severity":1,"message":"101","line":143,"column":28,"nodeType":"84","messageId":"85","endLine":143,"endColumn":30},{"ruleId":"94","severity":1,"message":"95","line":216,"column":38,"nodeType":"96","endLine":219,"endColumn":20},{"ruleId":"86","severity":1,"message":"102","line":36,"column":8,"nodeType":"88","endLine":36,"endColumn":10,"suggestions":"103"},{"ruleId":"86","severity":1,"message":"102","line":56,"column":8,"nodeType":"88","endLine":56,"endColumn":10,"suggestions":"104"},{"ruleId":"97","severity":1,"message":"105","line":30,"column":13,"nodeType":"99","messageId":"100","endLine":30,"endColumn":16},{"ruleId":"106","severity":1,"message":"107","line":83,"column":29,"nodeType":"96","endLine":87,"endColumn":31},"no-native-reassign",["108"],"no-negated-in-lhs",["109"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'match.params.id'. Either include it or remove the dependency array.","ArrayExpression",["110"],"array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-unused-vars","'FormText' is defined but never used.","Identifier","unusedVar","Expected '!==' and instead saw '!='.","React Hook useEffect has a missing dependency: 'jwt'. Either include it or remove the dependency array.",["111"],["112"],"'JWT' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","no-global-assign","no-unsafe-negation",{"desc":"113","fix":"114"},{"desc":"115","fix":"116"},{"desc":"115","fix":"117"},"Update the dependencies array to be: [match.params.id]",{"range":"118","text":"119"},"Update the dependencies array to be: [jwt]",{"range":"120","text":"121"},{"range":"122","text":"121"},[1005,1007],"[match.params.id]",[1225,1227],"[jwt]",[1764,1766]]